# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.network.lab.interface: '%env(resolve:ADM_INTERFACE)%'
    app.network.lab.cidr: '%env(resolve:LAB_NETWORK)%'
    app.network.data.interface: '%env(resolve:DATA_INTERFACE)%'
    app.network.data.cidr: '%env(resolve:DATA_NETWORK)%'
    app.bridge.name: '%env(resolve:BRIDGE_INT)%'
    app.bridge.ip: '%env(resolve:BRIDGE_INT_IP_ADDRESS)%'
    app.bridge.gateway: '%env(resolve:BRIDGE_INT_GW)%'
    app.services.proxy.wss: '%env(bool:REMOTELABZ_PROXY_USE_WSS)%'
    app.services.proxy.cert: '%env(string:WEBSOCKET_PROXY_SSL_CERT)%'
    app.services.proxy.key: '%env(string:WEBSOCKET_PROXY_SSL_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
